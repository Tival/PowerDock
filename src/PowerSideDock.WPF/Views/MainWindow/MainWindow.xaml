<Window x:Class="PowerSideDock.WPF.Views.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PowerSideDock.WPF"
        mc:Ignorable="d"
        Title="Power Dock" 
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        Background="Black"
        Opacity="0.95"
        Topmost="True"
        ShowInTaskbar="False"
        Width="{Binding WindowWidth, Mode=TwoWay}"
        Height="{Binding WindowHeight, Mode=TwoWay}"
        Top="{Binding WindowTop, Mode=TwoWay}"
        Left="{Binding WindowLeft, Mode=TwoWay}"
        Visibility="{Binding WindowVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"
        DataContext="{Binding MainWindowViewModel, Source={StaticResource Locator}}"
        Name="Root">
    <Grid Background="Black" Margin="10" >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <ListBox BorderThickness="0" BorderBrush="Transparent" ItemsSource="{Binding NoteList}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Black" Name="NotesListBox" HorizontalContentAlignment="Stretch">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="0 5 0 5"/>
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="IsSelected" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <Style TargetType="ListBoxItem">
                    <Style.Resources>
                        <!-- Background of selected item when focussed -->
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                        <!-- Background of selected item when not focussed -->
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="WhiteSmoke" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Background="Gray">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox 
                            Grid.Row="0" 
                            Grid.Column="0"
                            Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Foreground="#AAAAAA" 
                            FontSize="20"
                            Padding="5 0 0 0"
                            Style="{StaticResource NoteTextBoxStyle}"
                         />

                        <Button x:Name="DeleteNoteButton" 
                                Content="DEL"
                                Grid.Row="0" 
                                Grid.Column="1"
                                BorderThickness="0"
                                BorderBrush="Transparent"
                                Command="{Binding ElementName=Root, Path=DataContext.DeleteNoteCommand, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=DataContext}"
                                Style="{StaticResource CreateNoteButtonStyle}"
                         />

                        <TextBox 
                            Grid.Row="1" 
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Text="{Binding Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextWrapping="Wrap"
                            AcceptsReturn="True" 
                            BorderThickness="2 0 0 0" 
                            BorderBrush="#448aff"
                            MinHeight="32" 
                            Background="#0A0A0A" 
                            Foreground="White"
                            
                            Padding="5 10 5 10"
                            VerticalScrollBarVisibility="Auto"
                            Style="{StaticResource NoteTextBoxStyle}"
                         />


                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="CreateNoteButton" 
                Content="Create note" Grid.Row="1" 
                BorderThickness="0"
                BorderBrush="Transparent"
                Command="{Binding CreateNoteCommand, Mode=OneWay}"
                Style="{StaticResource CreateNoteButtonStyle}"
         />
    </Grid>
</Window>
